/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-04-11 12:55:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chart_002dorder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"renderer\" content=\"webkit|ie-comp|ie-stand\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no\" />\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\r\n");
      out.write("<!--[if lt IE 9]>\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/html5shiv.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/respond.min.js\"></script>\r\n");
      out.write("<![endif]-->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"static/h-ui/css/H-ui.min.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"static/h-ui.admin/css/H-ui.admin.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"lib/Hui-iconfont/1.0.8/iconfont.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"static/h-ui.admin/skin/default/skin.css\" id=\"skin\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"static/h-ui.admin/css/style.css\" />\r\n");
      out.write("<!--[if IE 6]>\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/DD_belatedPNG_0.0.8a-min.js\" ></script>\r\n");
      out.write("<script>DD_belatedPNG.fix('*');</script>\r\n");
      out.write("<![endif]-->\r\n");
      out.write("<title>订单销量统计</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<nav class=\"breadcrumb\"><i class=\"Hui-iconfont\">&#xe67f;</i> 首页 <span class=\"c-gray en\">&gt;</span> 统计管理 <span class=\"c-gray en\">&gt;</span> 订单销量统计 <a class=\"btn btn-success radius r\" style=\"line-height:1.6em;margin-top:3px\" href=\"javascript:location.replace(location.href);\" title=\"刷新\" ><i class=\"Hui-iconfont\">&#xe68f;</i></a></nav>\r\n");
      out.write("<div class=\"page-container\">\r\n");
      out.write("\t<div class=\"cl pd-5 bg-1 bk-gray mt-20\">\r\n");
      out.write("\t\t<span class=\"l\">\r\n");
      out.write("\t\t\t<a href=\"javascript:;\" onclick=\"getChartData(0)\" class=\"btn btn-secondary-outline radius\">本周</a>\r\n");
      out.write("\t\t\t<a href=\"javascript:;\" onclick=\"getChartData(1)\" class=\"btn btn-secondary-outline radius\">本月</a>\r\n");
      out.write("\t\t\t<a href=\"javascript:;\" onclick=\"getChartData(2)\" class=\"btn btn-secondary-outline radius\">上个月</a>\r\n");
      out.write("\t\t\t<select class=\"select-box\" style=\"width: 100px\" id=\"year\" onchange=\"getYearData()\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t&nbsp;&nbsp;指定日期范围：\r\n");
      out.write("            <input type=\"text\" onfocus=\"WdatePicker({ maxDate:'#F{$dp.$D(\\'startDate\\')||\\'%y-%M-%d\\'}' })\" id=\"startDate\" name=\"startDate\" class=\"input-text Wdate\" style=\"width:120px;\">\r\n");
      out.write("            -\r\n");
      out.write("            <input type=\"text\" onfocus=\"WdatePicker({ minDate:'#F{$dp.$D(\\'endDate\\')}',maxDate:'%y-%M-%d' })\" id=\"endDate\" name=\"endDate\" class=\"input-text Wdate\" style=\"width:120px;\">\r\n");
      out.write("\t\t\t&nbsp;&nbsp;<a href=\"javascript:;\" onclick=\"getCustomData()\" class=\"btn btn-success\">确定</a>\r\n");
      out.write("\t\t</span>\r\n");
      out.write("\t\t<span class=\"r\">总销售额：<strong id=\"countAll\">0.00</strong> ￥</span>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"container\" style=\"min-width:700px;height:450px;margin-top: 10px;\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("<!--_footer 作为公共模版分离出去-->\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/jquery/1.9.1/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/layer/2.4/layer.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/My97DatePicker/4.8/WdatePicker.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"static/h-ui/js/H-ui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"static/h-ui.admin/js/H-ui.admin.js\"></script> <!--/_footer 作为公共模版分离出去-->\r\n");
      out.write("\r\n");
      out.write("<!--请在下方写此页面业务相关的脚本-->\r\n");
      out.write("<script type=\"text/javascript\" src=\"lib/echarts.common.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("    $(document).ready(function () {\r\n");
      out.write("        $(\"#year\").append(\"<option selected value='-1'>按年统计</option>\");\r\n");
      out.write("        var startYear = 2017,nowYear = new Date().getFullYear();\r\n");
      out.write("        for(var i=0;i<=nowYear-startYear+1;i++){\r\n");
      out.write("            $(\"#year\").append(\"<option value='\"+startYear+\"'>\"+startYear+\"年</option>\");\r\n");
      out.write("            startYear+=1;\r\n");
      out.write("\t\t}\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 基于准备好的dom，初始化echarts实例\r\n");
      out.write("    var myChart = echarts.init(document.getElementById('container'), 'light');\r\n");
      out.write("\tvar xDatas=[],yDatas=[],startDate,endDate,year=0;\r\n");
      out.write("    getChartData(0,null,null);\r\n");
      out.write("    function getChartData(type) {\r\n");
      out.write("        var index = layer.load(3);\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            type: 'GET',\r\n");
      out.write("            url: '/count/order',\r\n");
      out.write("            dataType: 'json',\r\n");
      out.write("\t\t\tdata:{\r\n");
      out.write("                type: type,\r\n");
      out.write("                startTime: startDate,\r\n");
      out.write("                endTime: endDate,\r\n");
      out.write("                year: year\r\n");
      out.write("\t\t\t},\r\n");
      out.write("            success: function(data){\r\n");
      out.write("                layer.close(index);\r\n");
      out.write("                if(data.success!=true){\r\n");
      out.write("                    layer.alert(data.message,{title: '错误信息',icon: 2});\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("                console.log(data)\r\n");
      out.write("\t\t\t\txDatas = data.result.xDatas;\r\n");
      out.write("                yDatas = data.result.yDatas;\r\n");
      out.write("                $(\"#countAll\").html(data.result.countAll);\r\n");
      out.write("                drawChart();\r\n");
      out.write("            },\r\n");
      out.write("            error:function(XMLHttpRequest){\r\n");
      out.write("                layer.close(index);\r\n");
      out.write("                layer.alert('数据处理失败! 错误码:'+XMLHttpRequest.status,{title: '错误信息',icon: 2});\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getCustomData() {\r\n");
      out.write("        startDate = $('#startDate').val();\r\n");
      out.write("        if(startDate==\"\"||startDate==null){\r\n");
      out.write("            $('#startDate').focus();\r\n");
      out.write("            return;\r\n");
      out.write("\t\t}\r\n");
      out.write("        endDate = $('#endDate').val();\r\n");
      out.write("        if(endDate==\"\"||endDate==null){\r\n");
      out.write("            $('#endDate').focus();\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        getChartData(-1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function getYearData() {\r\n");
      out.write("        console.log(1)\r\n");
      out.write("        year = $('#year').val();\r\n");
      out.write("        if(year==\"\"||year==\"-1\"||year==null){\r\n");
      out.write("            return;\r\n");
      out.write("        }\r\n");
      out.write("        getChartData(-2);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\tfunction drawChart() {\r\n");
      out.write("        // 指定图表的配置项和数据\r\n");
      out.write("        var option = {\r\n");
      out.write("            title: {\r\n");
      out.write("                text: '订单销量统计',\r\n");
      out.write("                subtext: 'SMall'\r\n");
      out.write("            },\r\n");
      out.write("            tooltip: {\r\n");
      out.write("                trigger: 'axis'\r\n");
      out.write("            },\r\n");
      out.write("            legend: {\r\n");
      out.write("                data: ['销售金额']\r\n");
      out.write("            },\r\n");
      out.write("            toolbox: {\r\n");
      out.write("                show: true,\r\n");
      out.write("                feature: {\r\n");
      out.write("                    dataZoom: {\r\n");
      out.write("                        yAxisIndex: 'none'\r\n");
      out.write("                    },\r\n");
      out.write("                    dataView: {readOnly: false},\r\n");
      out.write("                    magicType: {type: ['line', 'bar']},\r\n");
      out.write("                    restore: {},\r\n");
      out.write("                    saveAsImage: {}\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            xAxis: {\r\n");
      out.write("                boundaryGap: false,\r\n");
      out.write("                data: xDatas\r\n");
      out.write("            },\r\n");
      out.write("            yAxis: {\r\n");
      out.write("                type: 'value',\r\n");
      out.write("                axisLabel: {\r\n");
      out.write("                    formatter: '{value} ￥'\r\n");
      out.write("                }\r\n");
      out.write("\t\t\t},\r\n");
      out.write("            series: [{\r\n");
      out.write("                name: '销售金额',\r\n");
      out.write("                type: 'line',\r\n");
      out.write("                data: yDatas\r\n");
      out.write("            }]\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        // 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("        myChart.setOption(option);\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
